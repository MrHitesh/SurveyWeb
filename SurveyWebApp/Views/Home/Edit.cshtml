@model EFDataAccessLibrary.Models.Survey

@{
    ViewData["Title"] = "Edit";
}

<div>
    <h4>@Model?.Title</h4>
    <h6>@Model?.Description</h6>
</div>
<hr />
<div class="row">
    <div class="col">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>

            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            @if(Model == null)
            {
            <input type="hidden" asp-for="CreatedOn" value="@DateTime.Now" />
            <div class="form-group">
                <label asp-for="ExpiresOn" class="control-label"></label>
                <input asp-for="ExpiresOn" class="form-control" />
                <span asp-validation-for="ExpiresOn" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="CreatedBy" value="@User.Identity.Name" />
            }
            else
            {
            <fieldset hidden>
                <div class="form-group">
                    <label asp-for="CreatedOn" class="control-label"></label>
                    <input asp-for="CreatedOn" class="form-control" />
                    <span asp-validation-for="CreatedOn" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ExpiresOn" class="control-label"></label>
                    <input asp-for="ExpiresOn" class="form-control" />
                    <span asp-validation-for="ExpiresOn" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CreatedBy" class="control-label"></label>
                    <input asp-for="CreatedBy" class="form-control" />
                    <span asp-validation-for="CreatedBy" class="text-danger"></span>
                </div>
            </fieldset>
            }


            @if(Model != null)
            {
            @for (int i = 0; i < Model.Questions.Count(); i++)
            {
            <div class="card mt-3">
                <div class="card-header">
                    <input type="hidden" asp-for="Questions[i].Id" />
                    <input style="font-weight: bold;" asp-for="Questions[i].QuestionText" type="text" class="form-control">
                </div>
                <ul class="list-group list-group-flush">
                    @for (int j = 0; j < Model.Questions[i].Choices.Count(); j++)
        {
                    <li class="list-group-item">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <div class="input-group-text">
                                    <input type="radio" aria-label="Radio button for following text input" disabled>
                                </div>
                            </div>
                            <input type="hidden" asp-for="Questions[i].Choices[j].Id" />
                            <input asp-for="Questions[i].Choices[j].ChoiceText" type="text" class="form-control">

                        </div>
                    </li>
        }
                </ul>
                <a href="#" class="btn btn-danger">Delete</a>
            </div>
}
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
